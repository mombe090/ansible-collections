---
- name: Setup Arch Linux systems
  hosts: control_node
  gather_facts: true
  become: true

  vars:
    install_dev_tools: true
    install_yay: true
    install_system_utilities: true
    ansible_user: '{{ lookup("env", "HOMELAB_USER") }}'

  pre_tasks:
    - name: Ensure ansible user {{ ansible_user }} is in wheel group
      become: true
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: wheel
        append: true
      ignore_errors: true

    - name: Configure passwordless sudo for ansible user
      become: true
      ansible.builtin.copy:
        content: |
          # Ansible managed - passwordless sudo for {{ ansible_user }}
          {{ ansible_user }} ALL=(ALL:ALL) NOPASSWD:ALL
        dest: /etc/sudoers.d/{{ ansible_user }}
        mode: "0440"
        owner: root
        group: root
        backup: true
      register: sudoers_result

    - name: Ensure wheel group has sudo access
      become: true
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: '^# %wheel ALL=\(ALL:ALL\) ALL'
        line: "%wheel ALL=(ALL:ALL) ALL"
        validate: "visudo -cf %s"

    - name: Check for existing pacman lock
      become: true
      ansible.builtin.stat:
        path: /var/lib/pacman/db.lck
      register: pacman_lock

    - name: Remove stale pacman lock if exists
      become: true
      ansible.builtin.file:
        path: /var/lib/pacman/db.lck
        state: absent
      when: pacman_lock.stat.exists

    - name: Wait for any running pacman processes to finish
      become: true
      ansible.builtin.shell:
        cmd: while pgrep pacman > /dev/null; do sleep 2; done; echo "No pacman processes running"
      register: pacman_wait
      changed_when: false

    - name: Update package databases
      become: true
      ansible.builtin.shell:
        cmd: pacman -Sy --noconfirm
      register: pacman_sync
      retries: 3
      delay: 5
      until: pacman_sync.rc == 0
      when: ansible_os_family == "Archlinux"

    - name: Upgrade system packages (optional)
      become: true
      ansible.builtin.shell:
        cmd: pacman -Su --noconfirm
      register: pacman_upgrade
      when:
        - ansible_os_family == "Archlinux"
        - pacman_sync.rc == 0
      ignore_errors: true

  roles:
    - role: arch

  post_tasks:
    - name: Display installed yay version
      ansible.builtin.shell:
        cmd: yay --version
      register: yay_version

    - name: Show yay version
      ansible.builtin.debug:
        msg: "Yay version: {{ yay_version.stdout }}"
      when:
        - yay_version is defined

    - name: Reboot notification
      ansible.builtin.debug:
        msg: "Consider rebooting the system to ensure all services and kernel modules are properly loaded"
