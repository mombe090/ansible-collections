- name: Disable systemd-resolved DNSStubListener
  ansible.builtin.shell: |
    printf "%b  %b Disabling systemd-resolved DNSStubListener" "${OVER}" "${TICK}"
    sed -r -i.orig 's/#?DNSStubListener=yes/DNSStubListener=no/g' /etc/systemd/resolved.conf
    systemctl reload-or-restart systemd-resolved
  become: yes

- name: Ensure pihole and update is up and running
  ansible.builtin.shell:
  become: yes
  args:
    chdir: "~/ansible-collections/homelab/roles/pihole/files"
    cmd: |
      docker compose down
      docker compose up -d
  become_user: "{{ ansible_user }}"

- name: Docker compose ps
  ansible.builtin.shell:
  become: yes
  args:
    chdir: "~/ansible-collections/homelab/roles/pihole/files"
    cmd: docker compose ps
  register: docker_compose_ps_output
  become_user: "{{ ansible_user }}"

- name: Show docker compose ps output
  ansible.builtin.debug:
    var: docker_compose_ps_output.stdout
  become_user: "{{ ansible_user }}"

- name: Update dns.hosts
  ansible.builtin.command:
    cmd: pihole-FTL --config dns.hosts '{{ pihole_dns_records | to_json }}'
  register: ftl_dns_hosts_response
  changed_when: ftl_dns_hosts_response.rc != 0

- name: Update dns.cnameRecords
  ansible.builtin.command:
    cmd: pihole-FTL --config dns.cnameRecords '{{ pihole_dns_cname_records | to_json }}'
  register: ftl_dns_cname_records_response
  changed_when: ftl_dns_cname_records_response.rc != 0
