- name: Disable systemd-resolved DNSStubListener
  ansible.builtin.shell: |
    printf "%b  %b Disabling systemd-resolved DNSStubListener" "${OVER}" "${TICK}"
    sed -r -i.orig 's/#?DNSStubListener=yes/DNSStubListener=no/g' /etc/systemd/resolved.conf
    systemctl reload-or-restart systemd-resolved
  become: yes

- name: Ensure {{ pihole_dir }} directory exists
  become: yes
  ansible.builtin.file:
    path: '{{ pihole_dir }}'
    state: directory

- name: Copy Pihole Config
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  become: yes
  loop:
    - { src: '{{ role_path }}/templates/compose.yaml.j2', dest: '{{ pihole_dir }}/compose.yaml' }
    - { src: '{{ role_path }}/templates/pihole.toml.j2', dest: '{{ pihole_dir }}/pihole.toml' }

- name: Ensure pihole and update is up and running
  ansible.builtin.shell:
  become: yes
  args:
    chdir: "{{ pihole_dir }}"
    cmd: |
      docker compose down
      docker compose up -d
  become_user: "{{ ansible_user }}"

- name: Docker compose ps
  ansible.builtin.shell:
  become: yes
  args:
    chdir: "{{ pihole_dir }}"
    cmd: docker compose ps
  register: docker_compose_ps_output
  become_user: "{{ ansible_user }}"

- name: Show docker compose ps output
  ansible.builtin.debug:
    var: docker_compose_ps_output.stdout
  become_user: "{{ ansible_user }}"
