---
# Optional post-installation tasks for Nix

- name: Set up Nix registry for flakes
  become: false
  ansible.builtin.shell: |
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
    nix registry add {{ item.key }} {{ item.value }}
  loop: "{{ nix_flake_registry | dict2items }}"
  register: nix_registry_setup
  failed_when: false
  changed_when: nix_registry_setup.rc == 0
  when: nix_flakes_enabled

- name: Create user Nix configuration directory
  become: false
  ansible.builtin.file:
    path: "{{ nix_user_config_dir }}"
    state: directory
    mode: "0755"
  when: nix_user_config_dir is defined

- name: Set up user-specific Nix configuration
  become: false
  ansible.builtin.template:
    src: user-nix.conf.j2
    dest: "{{ nix_user_config_dir }}/nix.conf"
    mode: "0644"
  when: nix_user_config_dir is defined

- name: Configure Nix garbage collection timer (optional)
  become: true
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=Nix Garbage Collection

      [Timer]
      OnCalendar=weekly
      Persistent=true

      [Install]
      WantedBy=timers.target
    dest: /etc/systemd/system/nix-gc.timer
    mode: "0644"
  notify:
    - reload systemd
  when: nix_enable_gc_timer | default(false)

- name: Configure Nix garbage collection service
  become: true
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=Nix Garbage Collection

      [Service]
      Type=oneshot
      ExecStart=/nix/var/nix/profiles/default/bin/nix-collect-garbage -d
      User=root
    dest: /etc/systemd/system/nix-gc.service
    mode: "0644"
  notify:
    - reload systemd
  when: nix_enable_gc_timer | default(false)

- name: Enable Nix garbage collection timer
  become: true
  ansible.builtin.systemd:
    name: nix-gc.timer
    enabled: true
    state: started
    daemon_reload: true
  when: nix_enable_gc_timer | default(false)

- name: Apply dotfiles Home Manager configuration (if exists)
  become: false
  ansible.builtin.shell: |
    export NIX_CONFIG="experimental-features = nix-command flakes"
    cd ~/dotfiles/.config/nix && nix run home-manager/{{ nix_home_manager_channel }} -- switch --flake .#{{ nix_home_manager_user }}@{{ nix_machine_type }} -b backup
  register: dotfiles_home_manager_switch
  failed_when: false
  changed_when: dotfiles_home_manager_switch.rc == 0
  when:
    - nix_home_manager_config_exists | default(false)
    - nix_home_manager_enabled
  tags:
    - dotfiles
    - home-manager

- name: Display dotfiles Home Manager switch result
  ansible.builtin.debug:
    msg: |
      üè† Dotfiles Home Manager Configuration:
      {% if dotfiles_home_manager_switch is defined and dotfiles_home_manager_switch.rc is defined %}
      {% if dotfiles_home_manager_switch.rc == 0 %}
      ‚úÖ Successfully applied dotfiles Home Manager configuration
      Machine Type: {{ nix_machine_type }}
      User: {{ nix_home_manager_user }}
      {% else %}
      ‚ùå Failed to apply dotfiles Home Manager configuration
      Error: {{ dotfiles_home_manager_switch.stderr | default('Unknown error') }}
      {% endif %}
      {% else %}
      ‚ö†Ô∏è  Skipped - no dotfiles Home Manager configuration found
      üí° Make sure ~/dotfiles/.config/nix/flake.nix exists with your configuration
      üí° Or check that nix_home_manager_config_exists is true
      {% endif %}
  when: nix_home_manager_enabled

- name: Ensure zsh is installed
  become: true
  ansible.builtin.apt:
    name: zsh
    state: present
    update_cache: false
  when: ansible_os_family == "Debian"

- name: Set zsh as default shell for root
  become: true
  ansible.builtin.user:
    name: root
    shell: /usr/bin/zsh
  when: ansible_os_family == "Debian"

- name: Set zsh as default shell for ansible_user
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    shell: /usr/bin/zsh
  when: ansible_os_family == "Debian"

- name: Display shell configuration result
  ansible.builtin.debug:
    msg: |
      üêö Shell Configuration:
      ‚úÖ Zsh installed and set as default shell
      ‚Ä¢ Root shell: /usr/bin/zsh
      ‚Ä¢ {{ ansible_user }} shell: /usr/bin/zsh
      üí° Logout and login again for shell changes to take effect
