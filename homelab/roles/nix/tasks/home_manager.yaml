---
# Home Manager setup tasks

- name: Check if Home Manager is already installed
  become: false
  ansible.builtin.shell: |
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
    command -v home-manager
  register: home_manager_check
  failed_when: false
  changed_when: false

- name: Set Home Manager installation status
  ansible.builtin.set_fact:
    home_manager_installed: "{{ home_manager_check.rc == 0 }}"

- name: Install Home Manager via flakes (recommended)
  become: false
  block:
    - name: Create .config/home-manager directory
      ansible.builtin.shell: mkdir -p "{{ user_home_dir }}/.config/home-manager"
      changed_when: false
      when: nix_home_manager_flake_enabled

    - name: Install Home Manager standalone
      ansible.builtin.shell: |
        . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
        nix run home-manager/{{ nix_home_manager_channel }} -- init --switch
      register: home_manager_install
      changed_when: home_manager_install.rc == 0
      when: not home_manager_installed and not nix_home_manager_flake_enabled

    - name: Create Home Manager flake.nix
      ansible.builtin.template:
        src: home-manager-flake.nix.j2
        dest: "{{ user_home_dir }}/.config/home-manager/flake.nix"
        mode: "0644"
        backup: true
      when:
        - nix_home_manager_flake_enabled
        - not (nix_home_manager_config_exists | default(false))

    - name: Create initial Home Manager configuration
      ansible.builtin.template:
        src: home.nix.j2
        dest: "{{ user_home_dir }}/.config/home-manager/home.nix"
        mode: "0644"
        backup: true
      when:
        - nix_home_manager_flake_enabled
        - not (nix_home_manager_config_exists | default(false))

    - name: Initialize Home Manager with flakes
      ansible.builtin.shell: |
        . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
        export NIX_CONFIG="experimental-features = nix-command flakes"
        cd {{ user_home_dir }}/.config/home-manager
        # Use the globally installed home-manager command
        home-manager switch --flake .#{{ ansible_user }} -b backup
      register: home_manager_flake_init
      failed_when: false
      changed_when: home_manager_flake_init.rc == 0
      when: nix_home_manager_flake_enabled

  when: nix_home_manager_enabled and not home_manager_installed

- name: Set up Home Manager shell integration
  become: false
  ansible.builtin.blockinfile:
    path: "{{ user_home_dir }}/.bashrc"
    block: |
      # Home Manager integration
      if [ -e {{ user_home_dir }}/.nix-profile/etc/profile.d/hm-session-vars.sh ]; then
        . {{ user_home_dir }}/.nix-profile/etc/profile.d/hm-session-vars.sh
      fi
    marker: "# {mark} ANSIBLE MANAGED BLOCK - Home Manager"
    create: true
    mode: "0644"
  when: nix_home_manager_enabled

- name: Configure Nix flake registry
  become: false
  ansible.builtin.shell: |
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
    nix registry add {{ item.key }} {{ item.value }}
  loop: "{{ nix_flake_registry | dict2items }}"
  register: registry_setup
  failed_when: false
  changed_when: "'warning' not in registry_setup.stderr"
  when: nix_flakes_enabled

- name: Display Home Manager status
  ansible.builtin.debug:
    msg: |
      Home Manager setup completed!

      Configuration location: {{ user_home_dir }}/.config/home-manager/
      {% if nix_home_manager_flake_enabled %}
      Using flakes: Yes
      To manage packages: Edit {{ user_home_dir }}/.config/home-manager/home.nix
      To apply changes: home-manager switch --flake ~/.config/home-manager#{{ ansible_user }}
      {% else %}
      Using traditional: Yes
      To manage packages: home-manager edit
      To apply changes: home-manager switch
      {% endif %}
  when: nix_home_manager_enabled
